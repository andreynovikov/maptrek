apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '29.0.3'
    ndkVersion '21.1.6352462'

    defaultConfig {
        applicationId "mobi.maptrek"
        minSdkVersion 23
        //noinspection OldTargetApi
        targetSdkVersion 28
        versionCode 77
        versionName "2020.04"
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "IS_TESTING", "new java.util.concurrent.atomic.AtomicBoolean(false)"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    aaptOptions {
        additionalParameters "--keep-raw-values"
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "tier", "region"

    productFlavors {
        full {
            dimension "tier"
            buildConfigField "boolean", "FULL_VERSION", "true"
        }
        lite {
            dimension "tier"
            applicationIdSuffix ".lite"
            versionNameSuffix "-lite"
            buildConfigField "boolean", "FULL_VERSION", "false"
        }
        world {
            dimension "region"
            buildConfigField "boolean", "RUSSIAN_EDITION", "false"
        }
        russia {
            dimension "region"
            applicationIdSuffix ".re"
            buildConfigField "boolean", "RUSSIAN_EDITION", "true"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (names.contains("full") && names.contains("russia")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }

    applicationVariants.all { variant ->
        // we need applicationId to be resolved first
        variant.buildConfigField "String", "EXPORT_PROVIDER_AUTHORITY", "\"${applicationId}.files\""
    }

    sourceSets { main { jni.srcDirs = ['src/main/jni', 'src/main/jni/'] } }

    externalNativeBuild {
        ndkBuild {
            path 'Android.mk'
        }
    }

    packagingOptions {
        exclude "**/publicsuffixes.gz"
        exclude "**/NOTICE"
    }
}

dependencies {
    // AndroidX
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'

    // Third-party
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.caverock:androidsvg:1.4'
    implementation 'org.slf4j:slf4j-api:1.7.29'
    implementation 'com.noveogroup.android:android-logger:1.3.6'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'org.openstreetmap.osmosis:osmosis-osm-binary:0.47'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v2.2.5'
    implementation 'com.github.jakob-grabner:Circle-Progress-View:v1.2.9'
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.10.0'
    implementation 'com.github.AppIntro:AppIntro:v5.1.0'
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    // Custom
    implementation 'com.github.andreynovikov:androidcolorpicker:v0.0.2'
    implementation 'com.github.andreynovikov:Geo-Coordinate-Conversion-Java:v1.0.0'
    implementation 'com.github.andreynovikov:AndroidSeekBarPreference:master-SNAPSHOT'

    //Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
}
